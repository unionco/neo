@import "../../theme/neo.globals";

// Form Group
// --------------------------------------------------

:host {
  /**
   * @prop --background: Background of the item
   * @prop --background-activated: Background of the item when pressed
   * @prop --background-focused: Background of the item when focused with the tab key
   * @prop --background-hover: Background of the item on hover
   *
   * @prop --border-color: Color of the item border
   * @prop --border-radius: Radius of the item border
   * @prop --border-style: Style of the item border
   * @prop --border-width: Width of the item border
   *
   * @prop --box-shadow: Box shadow of the item
   *
   * @prop --color: Color of the item
   * @prop --color-activated: Color of the item when pressed
   * @prop --color-focused: Color of the item when focused with the tab key
   * @prop --color-hover: Color of the item on hover
   *
   * @prop --detail-icon-color: Color of the item detail icon
   * @prop --detail-icon-opacity: Opacity of the item detail icon
   * @prop --detail-icon-font-size: Font size of the item detail icon
   * @prop --inner-border-width: Width of the item inner border
   *
   * @prop --inner-box-shadow: Box shadow of the item inner
   * @prop --inner-padding-top: Top padding of the item inner
   * @prop --inner-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
   * @prop --inner-padding-bottom: Bottom padding of the item inner
   * @prop --inner-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
   *
   * @prop --min-height: Minimum height of the item
   *
   * @prop --padding-bottom: Bottom padding of the item
   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
   * @prop --padding-top: Top padding of the item
   *
   * @prop --transition: Transition of the item
   *
   * @prop --ripple-color: Color of the item ripple effect
   *
   * @prop --highlight-height: The height of the highlight on the item
   * @prop --highlight-color-focused: The color of the highlight on the item when focused
   * @prop --highlight-color-valid: The color of the highlight on the item when valid
   * @prop --highlight-color-invalid: The color of the highlight on the item when invalid
   */
  --border-radius: 0px;
  --border-width: 0px;
  --border-style: solid;
  --padding-top: 0px;
  --padding-bottom: 0px;
  --padding-end: 0px;
  --padding-start: 0px;
  --box-shadow: none;
  --inner-border-width: 0px;
  --inner-padding-top: 0px;
  --inner-padding-bottom: 0px;
  --inner-padding-start: 0px;
  --inner-padding-end: 0px;
  --inner-box-shadow: none;
  --show-full-highlight: 0;
  --show-inset-highlight: 0;
  --detail-icon-color: initial;
  --detail-icon-font-size: 20px;
  --detail-icon-opacity: 0.25;
  --color-activated: var(--color);
  --color-focused: var(--color);
  --color-hover: var(--color);
  --ripple-color: var(--neo-item-background-activated, currentColor);

  @include font-smoothing();

  box-sizing: border-box;
  color: var(--color);
  display: block;
  font-family: $font-family-base;
  outline: none;
  overflow: hidden;
  position: relative;
  text-align: initial;
  text-decoration: none;
}


// Native Item
// --------------------------------------------------

.form-group-native {
  @include border-radius(var(--border-radius));
  @include margin(0);
  @include padding(
    var(--padding-top),
    var(--padding-end),
    var(--padding-bottom),
    calc(var(--padding-start) + var(--neo-safe-area-left, 0px))
  );
  @include text-inherit();

  align-items: center;
  background: var(--background);
  border-color: var(--border-color);
  border-style: var(--border-style);
  border-width: var(--border-width);
  box-shadow: var(--box-shadow);
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  min-height: var(--min-height);
  outline: none;
  overflow: inherit;
  position: relative;
  transition: var(--transition);
  width: 100%;
}

.form-group-native::-moz-focus-inner {
  border: 0;
}

// Inner Item
// --------------------------------------------------

.form-group-inner {
  @include margin(0);
  @include padding(
    var(--inner-padding-top),
    calc(var(--neo-safe-area-right, 0px) + var(--inner-padding-end)),
    var(--inner-padding-bottom),
    var(--inner-padding-start)
  );

  align-items: inherit;
  align-self: stretch;
  border-color: var(--border-color);
  border-style: var(--border-style);
  border-width: var(--inner-border-width);
  box-shadow: var(--inner-box-shadow);
  box-sizing: border-box;
  display: flex;
  flex: 1;
  flex-direction: inherit;
  min-height: inherit;
  overflow: inherit;
  position: relative;
}

// Item Slots
// --------------------------------------------------

::slotted(neo-label) {
  flex: 1;
}

// Item Input
// --------------------------------------------------

:host([vertical-align-top]),
:host(.form-group-input) {
  align-items: flex-start;
}

.input-wrapper {
  align-items: inherit;
  align-self: stretch;
  box-sizing: border-box;
  display: flex;
  flex: 1;
  flex-direction: inherit;
  overflow: hidden;
  text-overflow: ellipsis;
}

:host(.form-group-label-stacked) .form-group-native,
:host(.form-group-label-floating) .form-group-native {
  align-items: start;
}

:host(.form-group-label-stacked) .input-wrapper,
:host(.form-group-label-floating) .input-wrapper {
  flex: 1;
  flex-direction: column;
}

// Item Input Focused
// --------------------------------------------------

:host(.form-group-interactive.form-group-has-focus),
:host(.form-group-interactive.neo-touched.neo-invalid) {
  // If the item has a full border and highlight is enabled, show the full item highlight
  --full-highlight-height: #{calc(var(--highlight-height) * var(--show-full-highlight))};

  // If the item has an inset border and highlight is enabled, show the inset item highlight
  --inset-highlight-height: #{calc(var(--highlight-height) * var(--show-inset-highlight))};
}

// Item Input Focus
// --------------------------------------------------

:host(.form-group-interactive.form-group-has-focus) {
  --highlight-background: var(--highlight-color-focused);
}

// Item Input Valid
// --------------------------------------------------

:host(.form-group-interactive.neo-valid) {
  --highlight-background: var(--highlight-color-valid);
}

// Item Input Invalid
// --------------------------------------------------

:host(.form-group-interactive.neo-invalid) {
  --highlight-background: var(--highlight-color-invalid);
}

// Item Select
// --------------------------------------------------

:host(.form-group-label-stacked) ::slotted(neo-select),
:host(.form-group-label-floating) ::slotted(neo-select) {
  --padding-start: 0;

  align-self: stretch;
  max-width: 100%;
  width: 100%;
}

// Item Datetime
// --------------------------------------------------

:host(.form-group-label-stacked) ::slotted(neo-datetime),
:host(.form-group-label-floating) ::slotted(neo-datetime) {
  --padding-start: 0;

  width: 100%;
}

// Item w/ Multiple Inputs
// --------------------------------------------------
// Multiple inputs in an item should have the input
// cover relative to themselves instead of the item

:host(.form-group-multiple-inputs) ::slotted(neo-checkbox),
:host(.form-group-multiple-inputs) ::slotted(neo-datetime),
:host(.form-group-multiple-inputs) ::slotted(neo-radio),
:host(.form-group-multiple-inputs) ::slotted(neo-select) {
  position: relative;
}

// Item Textarea
// --------------------------------------------------

:host(.form-group-textarea) {
  align-items: stretch;
}
