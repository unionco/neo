@import "../../theme/neo.globals";

/// @prop - Padding top of the round button
$button-round-padding-top:        0 !default;

/// @prop - Padding end of the round button
$button-round-padding-end:        26px !default;

/// @prop - Padding bottom of the round button
$button-round-padding-bottom:     $button-round-padding-top !default;

/// @prop - Padding start of the round button
$button-round-padding-start:      $button-round-padding-end !default;

/// @prop - Border radius of the round button
$button-round-border-radius:      64px !default;

/// @prop - Border radius of a default button
$button-border-radius:            4px !default;

/// @prop - Padding top of the default button
$button-padding-top:              8px !default;

/// @prop - Padding bottom of the default button
$button-padding-bottom:           $button-padding-top !default;

/// @prop - Padding start of the default button
$button-padding-start:            16px !default;

/// @prop - Padding end of the default button
$button-padding-end:              $button-padding-start !default;

/// @prop - Margin top of the default button
$button-margin-top:              4px !default;

/// @prop - Margin bottom of the default button
$button-margin-bottom:           $button-margin-top !default;

/// @prop - Margin start of the default button
$button-margin-start:            2px !default;

/// @prop - Margin end of the default button
$button-margin-end:              $button-margin-start !default;

/// @prop - Button Border width
$button-border-width:             1px !default;

/// @prop - Button Border style
$button-border-style:             solid !default;

/// @prop - Height of the button
$button-height:                   2.8em !default;

/// @prop - Font size of the button text
$button-font-size:                16px !default;

/// @prop - Font size of the button text
$button-opacity-hover:            .8 !default;

/// @prop - Font size of the button text
$button-clear-opacity-hover:      .6 !default;

// Button
// --------------------------------------------------

:host {
  /**
   * @prop --background: Background of the button
   * @prop --background-activated: Background of the button when pressed
   * @prop --background-focused: Background of the button when focused with the tab key
   * @prop --background-hover: Background of the button on hover
   *
   * @prop --color: Text color of the button
   * @prop --color-activated: Text color of the button when pressed
   * @prop --color-focused: Text color of the button when focused with the tab key
   * @prop --color-hover: Text color of the button when hover
   *
   * @prop --transition: Transition of the button
   *
   * @prop --border-radius: Border radius of the button
   * @prop --border-width: Border width of the button
   * @prop --border-style: Border style of the button
   * @prop --border-color: Border color of the button
   *
   * @prop --ripple-color: Color of the button ripple effect
   *
   * @prop --box-shadow: Box shadow of the button
   * @prop --opacity: Opacity of the button
   *
   * @prop --padding-top: Top padding of the button
   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
   * @prop --padding-bottom: Bottom padding of the button
   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
   */

  --border-radius: #{$button-border-radius};
  --padding-top: #{$button-padding-top};
  --padding-bottom: #{$button-padding-bottom};
  --padding-start: #{$button-padding-start};
  --padding-end: #{$button-padding-end};

  --overflow: hidden;
  --border-width: initial;
  --border-color: initial;
  --border-style: initial;
  --color-hover: initial;
  --box-shadow: none;

  @include margin($button-margin-top, $button-margin-end, $button-margin-bottom, $button-margin-start);

  display: inline-block;

  height: $button-height;
  width: auto;

  color: var(--color);

  font-family: $font-family-base;
  font-size: $button-font-size;

  text-align: center;
  text-decoration: none;
  text-overflow: ellipsis;

  white-space: nowrap;

  user-select: none;
  vertical-align: top; // the better option for most scenarios
  vertical-align: -webkit-baseline-middle; // the best for those that support it
  pointer-events: auto;

  font-kerning: none;
}

:host(.button-disabled) {
  --opacity: .5;
  pointer-events: none;
}

:host(.button-disabled) .button-native {
  cursor: default;
  pointer-events: none;
}

// Solid Button
// --------------------------------------------------

// Default Solid Color
:host(.button-solid) {
  --background: #{neo-color(primary, base)};
  --background-focused: #{neo-color(primary, shade)};
  --background-hover: #{neo-color(primary, tint)};
  --color: #{neo-color(primary, contrast)};
  --color-activated: #{neo-color(primary, contrast)};
  --color-focused: #{neo-color(primary, contrast)};
}

// Solid Button with Color
:host(.button-solid.neo-color) .button-native {
  background: current-color(base);
  color: current-color(contrast);
}

// Focused/Activated Solid Button with Color
:host(.button-solid.neo-color.neo-focused) .button-native {
  background: #{current-color(shade)};
}


// Outline Button
// --------------------------------------------------

// Default Outline Color
:host(.button-outline) {
  --border-radius: #{$button-border-radius};
  --border-width: #{$button-border-width};
  --border-style: #{$button-border-style};
  --background-activated: #{neo-color(primary, base)};
  --background-focused: #{neo-color(primary, base, .1)};
  --color-activated: #{neo-color(primary, contrast)};

  --border-color: #{neo-color(primary, base)};
  --background: transparent;
  --color: #{neo-color(primary, base)};
  --color-focused: #{neo-color(primary, base)};
}

// Outline Button with Color
:host(.button-outline.neo-color) .button-native {
  border-color: current-color(base);

  background: transparent;
  color: current-color(base);
}

:host(.button-outline.neo-focused.neo-color) .button-native {
  background: current-color(base, .1);
  color: current-color(base);
}


// Clear Button
// --------------------------------------------------

// Default Clear Color
:host(.button-clear) {
  --border-width: 0;
  --background: transparent;
  --color: #{neo-color(primary, base)};
}

// Clear Button with Color
:host(.button-clear.neo-color) .button-native {
  background: transparent;
  color: current-color(base);
}

// Focused Clear Button with Color
:host(.button-clear.neo-focused.neo-color) .button-native {
  background: current-color(base, .1);
  color: current-color(base);
}

// Activated Clear Button with Color
:host(.button-clear.activated.neo-color) .button-native {
  background: transparent;
}


// Block Button
// --------------------------------------------------

:host(.button-block) {
  display: block;
}

:host(.button-block) .button-native {
  @include margin-horizontal(0);

  display: block;

  width: 100%;

  clear: both;

  contain: content;
}

:host(.button-block) .button-native::after {
  clear: both;
}


// Full Button
// --------------------------------------------------

:host(.button-full) {
  display: block;
}

:host(.button-full) .button-native {
  @include margin-horizontal(0);

  display: block;

  width: 100%;

  contain: content;
}

:host(.button-full:not(.button-round)) .button-native {
  @include border-radius(0);

  border-right-width: 0;
  border-left-width: 0;
}

// iOS Button Sizes
// --------------------------------------------------

:host(.button-large) {
  --border-radius: calc(#{$button-border-radius} * 1.25);
  --padding-top: calc(#{$button-padding-top} * 1.25);
  --padding-start: calc(#{$button-padding-start} * 1.75);
  --padding-end: calc(#{$button-padding-end} * 1.75);
  --padding-bottom: calc(#{$button-padding-bottom} * 1.25);

  height: calc(#{$button-height} * 1.25);

  font-size: calc(#{$button-font-size} * 1.25);
}

:host(.button-small) {
  --border-radius: calc(#{$button-border-radius} * 0.85);
  --padding-top: calc(#{$button-padding-top} * 0.85);
  --padding-start: calc(#{$button-padding-start} * 0.95);
  --padding-end: calc(#{$button-padding-end} * 0.95);
  --padding-bottom: calc(#{$button-padding-bottom} * 0.85);

  height: calc(#{$button-height} * 0.85);

  font-size: calc(#{$button-font-size} * 0.85);
}

.button-native {
  @include border-radius(var(--border-radius));
  @include font-smoothing();
  @include margin(0);
  @include padding(var(--padding-top), var(--padding-end), var(--padding-bottom), var(--padding-start));
  @include text-inherit();

  display: block;
  position: relative;

  width: 100%;
  height: 100%;

  transition: var(--transition);

  border-width: var(--border-width);
  border-style: var(--border-style);
  border-color: var(--border-color);

  outline: none;

  background: var(--background);

  line-height: 1;

  box-shadow: var(--box-shadow);
  contain: layout style;
  cursor: pointer;
  opacity: var(--opacity);
  overflow: var(--overflow);

  z-index: 0;
  box-sizing: border-box;
  appearance: none;
}

.button-native::-moz-focus-inner {
  border: 0;
}

.button-inner {
  display: flex;

  flex-flow: row nowrap;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;

  width: 100%;
  height: 100%;
}


// Button Icons
// --------------------------------------------------

::slotted(neo-icon) {
  font-size: 1.4em;
  pointer-events: none;
}

::slotted(neo-icon[slot="start"]) {
  @include margin(0, .3em, 0, -.3em);
}

::slotted(neo-icon[slot="end"]) {
  @include margin(0, -.2em, 0, .3em);
}

::slotted(neo-icon[slot="icon-only"]) {
  font-size: 1.8em;
}

// Button: Hover
// --------------------------------------------------

:host(.neo-focused) .button-native {
  background: var(--background-focused);
  color: var(--color-focused);
}

:host(.activated) .button-native {
  background: var(--background-activated);
  color: var(--color-activated);
}

@media (any-hover: hover) {
  :host(:hover) .button-native {
    background: var(--background-hover);
    color: var(--color-hover);
  }

  :host(.button-solid:hover) {
    --opacity: #{$button-opacity-hover};
  }

  :host(.button-clear:hover),
  :host(.button-outline:hover) {
    --opacity: #{$button-clear-opacity-hover};
  }
}
